/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SoulReader, SoulReaderInterface } from "../SoulReader";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_limbo",
        type: "address",
      },
    ],
    name: "CrossingParameters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_limbo",
        type: "address",
      },
    ],
    name: "ExpectedCrossingBonus",
    outputs: [
      {
        internalType: "uint256",
        name: "flanBonus",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_limbo",
        type: "address",
      },
    ],
    name: "ExpectedCrossingBonusRate",
    outputs: [
      {
        internalType: "uint256",
        name: "bonusRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_limbo",
        type: "address",
      },
    ],
    name: "GetPendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_limbo",
        type: "address",
      },
    ],
    name: "SoulStats",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611494806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630591fac41461005c578063234b11ae1461008e5780636566b73d146100be578063701d6efc146100ee578063b961d8ac14610120575b600080fd5b61007660048036038101906100719190610d5e565b610150565b6040516100859392919061105b565b60405180910390f35b6100a860048036038101906100a39190610d9a565b610326565b6040516100b59190611009565b60405180910390f35b6100d860048036038101906100d39190610d9a565b610592565b6040516100e59190611009565b60405180910390f35b61010860048036038101906101039190610d5e565b610971565b60405161011793929190611024565b60405180910390f35b61013a60048036038101906101359190610d9a565b610b4d565b6040516101479190611009565b60405180910390f35b60008060008061015f85610cca565b905060008173ffffffffffffffffffffffffffffffffffffffff1663057e9b96886040518263ffffffff1660e01b815260040161019c9190610f8e565b60206040518083038186803b1580156101b457600080fd5b505afa1580156101c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ec9190610de9565b90506000808373ffffffffffffffffffffffffffffffffffffffff1663c12cbe868a856040518363ffffffff1660e01b815260040161022c929190610fe0565b60c06040518083038186803b15801561024457600080fd5b505afa158015610258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027c9190610ed8565b955095505050505060008973ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b81526004016102bf9190610f8e565b60206040518083038186803b1580156102d757600080fd5b505afa1580156102eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030f9190610de9565b905082818397509750975050505050509250925092565b60008061033283610cca565b905060008173ffffffffffffffffffffffffffffffffffffffff1663057e9b96866040518263ffffffff1660e01b815260040161036f9190610f8e565b60206040518083038186803b15801561038757600080fd5b505afa15801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf9190610de9565b90506000808373ffffffffffffffffffffffffffffffffffffffff166315a13a3f888a866040518463ffffffff1660e01b815260040161040193929190610fa9565b60606040518083038186803b15801561041957600080fd5b505afa15801561042d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104519190610e12565b9250509150801561046957600094505050505061058b565b6000806000808773ffffffffffffffffffffffffffffffffffffffff166325c2c3898c896040518363ffffffff1660e01b81526004016104aa929190610fe0565b60a06040518083038186803b1580156104c257600080fd5b505afa1580156104d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fa9190610e61565b509350935093509350600083146105115782610513565b425b9250600084146105235783610531565b600142610530919061131e565b5b935060008484610541919061131e565b8361054c91906111ad565b9050600080881161055e576000610560565b815b8361056b9190611092565b90506000811361057c57600061057e565b805b9a50505050505050505050505b9392505050565b60008061059e83610cca565b905060008173ffffffffffffffffffffffffffffffffffffffff1663057e9b96866040518263ffffffff1660e01b81526004016105db9190610f8e565b60206040518083038186803b1580156105f357600080fd5b505afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190610de9565b9050610635610cd4565b8273ffffffffffffffffffffffffffffffffffffffff1663c12cbe8687846040518363ffffffff1660e01b8152600401610670929190610fe0565b60c06040518083038186803b15801561068857600080fd5b505afa15801561069c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c09190610ed8565b909192509091508460000185602001866080018760a001848152508481525084815250848152505050505060008373ffffffffffffffffffffffffffffffffffffffff166325c2c38988856040518363ffffffff1660e01b8152600401610728929190610fe0565b60a06040518083038186803b15801561074057600080fd5b505afa158015610754573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107789190610e61565b50505091505060006001836080015114156107935742610795565b815b905060008873ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016107d29190610f8e565b60206040518083038186803b1580156107ea57600080fd5b505afa1580156107fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108229190610de9565b90506000808773ffffffffffffffffffffffffffffffffffffffff166315a13a3f8c8e8a6040518463ffffffff1660e01b815260040161086493929190610fa9565b60606040518083038186803b15801561087c57600080fd5b505afa158015610890573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b49190610e12565b50915091506000831115610915578264e8d4a510008760a001518860000151876108de919061131e565b6108e891906112c4565b6108f291906112c4565b6108fc919061117c565b866020015161090b9190611126565b8660200181815250505b600064e8d4a5100087602001518461092d91906112c4565b610937919061117c565b905081811061095c57818161094c919061131e565b995050505050505050505061096a565b600099505050505050505050505b9392505050565b60008060008061098085610cca565b905060008173ffffffffffffffffffffffffffffffffffffffff1663057e9b96886040518263ffffffff1660e01b81526004016109bd9190610f8e565b60206040518083038186803b1580156109d557600080fd5b505afa1580156109e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0d9190610de9565b905060008273ffffffffffffffffffffffffffffffffffffffff1663c12cbe8689846040518363ffffffff1660e01b8152600401610a4c929190610fe0565b60c06040518083038186803b158015610a6457600080fd5b505afa158015610a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9c9190610ed8565b955050505050506000808473ffffffffffffffffffffffffffffffffffffffff166325c2c3898b866040518363ffffffff1660e01b8152600401610ae1929190610fe0565b60a06040518083038186803b158015610af957600080fd5b505afa158015610b0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b319190610e61565b5093509350505080828497509750975050505050509250925092565b600080610b5983610cca565b905060008173ffffffffffffffffffffffffffffffffffffffff1663057e9b96866040518263ffffffff1660e01b8152600401610b969190610f8e565b60206040518083038186803b158015610bae57600080fd5b505afa158015610bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be69190610de9565b90506000808373ffffffffffffffffffffffffffffffffffffffff166315a13a3f888a866040518463ffffffff1660e01b8152600401610c2893929190610fa9565b60606040518083038186803b158015610c4057600080fd5b505afa158015610c54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c789190610e12565b92505091508015610c90576000945050505050610cc3565b6000610c9d898989610326565b905064e8d4a510008382610cb191906112c4565b610cbb919061117c565b955050505050505b9392505050565b6000819050919050565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600081359050610d1981611402565b92915050565b600081519050610d2e81611419565b92915050565b600081519050610d4381611430565b92915050565b600081519050610d5881611447565b92915050565b60008060408385031215610d7157600080fd5b6000610d7f85828601610d0a565b9250506020610d9085828601610d0a565b9150509250929050565b600080600060608486031215610daf57600080fd5b6000610dbd86828701610d0a565b9350506020610dce86828701610d0a565b9250506040610ddf86828701610d0a565b9150509250925092565b600060208284031215610dfb57600080fd5b6000610e0984828501610d49565b91505092915050565b600080600060608486031215610e2757600080fd5b6000610e3586828701610d49565b9350506020610e4686828701610d49565b9250506040610e5786828701610d1f565b9150509250925092565b600080600080600060a08688031215610e7957600080fd5b6000610e8788828901610d49565b9550506020610e9888828901610d49565b9450506040610ea988828901610d34565b9350506060610eba88828901610d49565b9250506080610ecb88828901610d1f565b9150509295509295909350565b60008060008060008060c08789031215610ef157600080fd5b6000610eff89828a01610d49565b9650506020610f1089828a01610d49565b9550506040610f2189828a01610d49565b9450506060610f3289828a01610d49565b9350506080610f4389828a01610d49565b92505060a0610f5489828a01610d49565b9150509295509295509295565b610f6a81611352565b82525050565b610f7981611370565b82525050565b610f888161139a565b82525050565b6000602082019050610fa36000830184610f61565b92915050565b6000606082019050610fbe6000830186610f61565b610fcb6020830185610f61565b610fd86040830184610f7f565b949350505050565b6000604082019050610ff56000830185610f61565b6110026020830184610f7f565b9392505050565b600060208201905061101e6000830184610f7f565b92915050565b60006060820190506110396000830186610f7f565b6110466020830185610f70565b6110536040830184610f7f565b949350505050565b60006060820190506110706000830186610f7f565b61107d6020830185610f7f565b61108a6040830184610f7f565b949350505050565b600061109d82611370565b91506110a883611370565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313600083121516156110e3576110e26113a4565b5b817f800000000000000000000000000000000000000000000000000000000000000003831260008312161561111b5761111a6113a4565b5b828201905092915050565b60006111318261139a565b915061113c8361139a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611171576111706113a4565b5b828201905092915050565b60006111878261139a565b91506111928361139a565b9250826111a2576111a16113d3565b5b828204905092915050565b60006111b882611370565b91506111c383611370565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615611202576112016113a4565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561123f5761123e6113a4565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561127c5761127b6113a4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156112b9576112b86113a4565b5b828202905092915050565b60006112cf8261139a565b91506112da8361139a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611313576113126113a4565b5b828202905092915050565b60006113298261139a565b91506113348361139a565b925082821015611347576113466113a4565b5b828203905092915050565b600061135d8261137a565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61140b81611352565b811461141657600080fd5b50565b61142281611364565b811461142d57600080fd5b50565b61143981611370565b811461144457600080fd5b50565b6114508161139a565b811461145b57600080fd5b5056fea2646970667358221220c564fcb7a7a6039244f0e5db1a014ea73293f18dd669d5299afdfbe5df96239564736f6c63430008040033";

export class SoulReader__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SoulReader> {
    return super.deploy(overrides || {}) as Promise<SoulReader>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SoulReader {
    return super.attach(address) as SoulReader;
  }
  connect(signer: Signer): SoulReader__factory {
    return super.connect(signer) as SoulReader__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SoulReaderInterface {
    return new utils.Interface(_abi) as SoulReaderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SoulReader {
    return new Contract(address, _abi, signerOrProvider) as SoulReader;
  }
}
