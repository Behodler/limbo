/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SoulReader, SoulReaderInterface } from "../SoulReader";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_limbo",
        type: "address",
      },
    ],
    name: "CrossingParameters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_limbo",
        type: "address",
      },
    ],
    name: "ExpectedCrossingBonus",
    outputs: [
      {
        internalType: "uint256",
        name: "flanBonus",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_limbo",
        type: "address",
      },
    ],
    name: "ExpectedCrossingBonusRate",
    outputs: [
      {
        internalType: "uint256",
        name: "bonusRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_limbo",
        type: "address",
      },
    ],
    name: "GetPendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_limbo",
        type: "address",
      },
    ],
    name: "SoulStats",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506118ae806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630591fac41461005c578063234b11ae1461008e5780636566b73d146100be578063701d6efc146100ee578063b961d8ac14610120575b600080fd5b6100766004803603810190610071919061100a565b610150565b604051610085939291906113de565b60405180910390f35b6100a860048036038101906100a39190611046565b610326565b6040516100b5919061138c565b60405180910390f35b6100d860048036038101906100d39190611046565b61063e565b6040516100e5919061138c565b60405180910390f35b6101086004803603810190610103919061100a565b610a1d565b604051610117939291906113a7565b60405180910390f35b61013a60048036038101906101359190611046565b610bf9565b604051610147919061138c565b60405180910390f35b60008060008061015f85610d76565b905060008173ffffffffffffffffffffffffffffffffffffffff1663057e9b96886040518263ffffffff1660e01b815260040161019c9190611273565b60206040518083038186803b1580156101b457600080fd5b505afa1580156101c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ec9190611095565b90506000808373ffffffffffffffffffffffffffffffffffffffff1663c12cbe868a856040518363ffffffff1660e01b815260040161022c9291906112c5565b60c06040518083038186803b15801561024457600080fd5b505afa158015610258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027c9190611184565b955095505050505060008973ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b81526004016102bf9190611273565b60206040518083038186803b1580156102d757600080fd5b505afa1580156102eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030f9190611095565b905082818397509750975050505050509250925092565b60008061033283610d76565b905060008173ffffffffffffffffffffffffffffffffffffffff1663057e9b96866040518263ffffffff1660e01b815260040161036f9190611273565b60206040518083038186803b15801561038757600080fd5b505afa15801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf9190611095565b90506000808373ffffffffffffffffffffffffffffffffffffffff166315a13a3f888a866040518463ffffffff1660e01b81526004016104019392919061128e565b60606040518083038186803b15801561041957600080fd5b505afa15801561042d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045191906110be565b92505091508015610469576000945050505050610637565b6000806000808773ffffffffffffffffffffffffffffffffffffffff166325c2c3898c896040518363ffffffff1660e01b81526004016104aa9291906112c5565b60a06040518083038186803b1580156104c257600080fd5b505afa1580156104d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fa919061110d565b509350935093509350600083146105115782610513565b425b9250600084146105235783610531565b60014261053091906116bd565b5b93506000848461054191906116bd565b8361054c919061154c565b905061058d6040518060400160405280600981526020017f746f6b656e3a20256400000000000000000000000000000000000000000000008152508d610d80565b6105d76040518060400160405280600f81526020017f74696d6520656c6170736564202564000000000000000000000000000000000081525086866105d291906116bd565b610e1c565b6105fa604051806060016040528060378152602001611842603791398284610eb8565b600080881161060a57600061060c565b815b836106179190611431565b90506000811361062857600061062a565b805b9a50505050505050505050505b9392505050565b60008061064a83610d76565b905060008173ffffffffffffffffffffffffffffffffffffffff1663057e9b96866040518263ffffffff1660e01b81526004016106879190611273565b60206040518083038186803b15801561069f57600080fd5b505afa1580156106b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d79190611095565b90506106e1610f80565b8273ffffffffffffffffffffffffffffffffffffffff1663c12cbe8687846040518363ffffffff1660e01b815260040161071c9291906112c5565b60c06040518083038186803b15801561073457600080fd5b505afa158015610748573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076c9190611184565b909192509091508460000185602001866080018760a001848152508481525084815250848152505050505060008373ffffffffffffffffffffffffffffffffffffffff166325c2c38988856040518363ffffffff1660e01b81526004016107d49291906112c5565b60a06040518083038186803b1580156107ec57600080fd5b505afa158015610800573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610824919061110d565b505050915050600060018360800151141561083f5742610841565b815b905060008873ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161087e9190611273565b60206040518083038186803b15801561089657600080fd5b505afa1580156108aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ce9190611095565b90506000808773ffffffffffffffffffffffffffffffffffffffff166315a13a3f8c8e8a6040518463ffffffff1660e01b81526004016109109392919061128e565b60606040518083038186803b15801561092857600080fd5b505afa15801561093c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096091906110be565b509150915060008311156109c1578264e8d4a510008760a0015188600001518761098a91906116bd565b6109949190611663565b61099e9190611663565b6109a8919061151b565b86602001516109b791906114c5565b8660200181815250505b600064e8d4a510008760200151846109d99190611663565b6109e3919061151b565b9050818110610a085781816109f891906116bd565b9950505050505050505050610a16565b600099505050505050505050505b9392505050565b600080600080610a2c85610d76565b905060008173ffffffffffffffffffffffffffffffffffffffff1663057e9b96886040518263ffffffff1660e01b8152600401610a699190611273565b60206040518083038186803b158015610a8157600080fd5b505afa158015610a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab99190611095565b905060008273ffffffffffffffffffffffffffffffffffffffff1663c12cbe8689846040518363ffffffff1660e01b8152600401610af89291906112c5565b60c06040518083038186803b158015610b1057600080fd5b505afa158015610b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b489190611184565b955050505050506000808473ffffffffffffffffffffffffffffffffffffffff166325c2c3898b866040518363ffffffff1660e01b8152600401610b8d9291906112c5565b60a06040518083038186803b158015610ba557600080fd5b505afa158015610bb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdd919061110d565b5093509350505080828497509750975050505050509250925092565b600080610c0583610d76565b905060008173ffffffffffffffffffffffffffffffffffffffff1663057e9b96866040518263ffffffff1660e01b8152600401610c429190611273565b60206040518083038186803b158015610c5a57600080fd5b505afa158015610c6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c929190611095565b90506000808373ffffffffffffffffffffffffffffffffffffffff166315a13a3f888a866040518463ffffffff1660e01b8152600401610cd49392919061128e565b60606040518083038186803b158015610cec57600080fd5b505afa158015610d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2491906110be565b92505091508015610d3c576000945050505050610d6f565b6000610d49898989610326565b905064e8d4a510008382610d5d9190611663565b610d67919061151b565b955050505050505b9392505050565b6000819050919050565b610e188282604051602401610d969291906112ee565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f57565b5050565b610eb48282604051602401610e3292919061131e565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f57565b5050565b610f52838383604051602401610ed09392919061134e565b6040516020818303038152906040527f969cdd03000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f57565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600081359050610fc5816117e5565b92915050565b600081519050610fda816117fc565b92915050565b600081519050610fef81611813565b92915050565b6000815190506110048161182a565b92915050565b6000806040838503121561101d57600080fd5b600061102b85828601610fb6565b925050602061103c85828601610fb6565b9150509250929050565b60008060006060848603121561105b57600080fd5b600061106986828701610fb6565b935050602061107a86828701610fb6565b925050604061108b86828701610fb6565b9150509250925092565b6000602082840312156110a757600080fd5b60006110b584828501610ff5565b91505092915050565b6000806000606084860312156110d357600080fd5b60006110e186828701610ff5565b93505060206110f286828701610ff5565b925050604061110386828701610fcb565b9150509250925092565b600080600080600060a0868803121561112557600080fd5b600061113388828901610ff5565b955050602061114488828901610ff5565b945050604061115588828901610fe0565b935050606061116688828901610ff5565b925050608061117788828901610fcb565b9150509295509295909350565b60008060008060008060c0878903121561119d57600080fd5b60006111ab89828a01610ff5565b96505060206111bc89828a01610ff5565b95505060406111cd89828a01610ff5565b94505060606111de89828a01610ff5565b93505060806111ef89828a01610ff5565b92505060a061120089828a01610ff5565b9150509295509295509295565b611216816116f1565b82525050565b6112258161170f565b82525050565b600061123682611415565b6112408185611420565b9350611250818560208601611743565b611259816117d4565b840191505092915050565b61126d81611739565b82525050565b6000602082019050611288600083018461120d565b92915050565b60006060820190506112a3600083018661120d565b6112b0602083018561120d565b6112bd6040830184611264565b949350505050565b60006040820190506112da600083018561120d565b6112e76020830184611264565b9392505050565b60006040820190508181036000830152611308818561122b565b9050611317602083018461120d565b9392505050565b60006040820190508181036000830152611338818561122b565b90506113476020830184611264565b9392505050565b60006060820190508181036000830152611368818661122b565b90506113776020830185611264565b6113846040830184611264565b949350505050565b60006020820190506113a16000830184611264565b92915050565b60006060820190506113bc6000830186611264565b6113c9602083018561121c565b6113d66040830184611264565b949350505050565b60006060820190506113f36000830186611264565b6114006020830185611264565b61140d6040830184611264565b949350505050565b600081519050919050565b600082825260208201905092915050565b600061143c8261170f565b91506114478361170f565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0383136000831215161561148257611481611776565b5b817f80000000000000000000000000000000000000000000000000000000000000000383126000831216156114ba576114b9611776565b5b828201905092915050565b60006114d082611739565b91506114db83611739565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115105761150f611776565b5b828201905092915050565b600061152682611739565b915061153183611739565b925082611541576115406117a5565b5b828204905092915050565b60006115578261170f565b91506115628361170f565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156115a1576115a0611776565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156115de576115dd611776565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561161b5761161a611776565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561165857611657611776565b5b828202905092915050565b600061166e82611739565b915061167983611739565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156116b2576116b1611776565b5b828202905092915050565b60006116c882611739565b91506116d383611739565b9250828210156116e6576116e5611776565b5b828203905092915050565b60006116fc82611719565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015611761578082015181840152602081019050611746565b83811115611770576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b6117ee816116f1565b81146117f957600080fd5b50565b61180581611703565b811461181057600080fd5b50565b61181c8161170f565b811461182757600080fd5b50565b61183381611739565b811461183e57600080fd5b5056fe616363756d756c61746564466c616e50657254657261546f6b656e2025642c20696e697469616c43726f7373696e67426f6e7573202564a264697066735822122053d7a5025f3593a12ac7abe91b1d7d21774ce001c8933473ea33c423bfa25d0a64736f6c63430008040033";

export class SoulReader__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SoulReader> {
    return super.deploy(overrides || {}) as Promise<SoulReader>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SoulReader {
    return super.attach(address) as SoulReader;
  }
  connect(signer: Signer): SoulReader__factory {
    return super.connect(signer) as SoulReader__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SoulReaderInterface {
    return new utils.Interface(_abi) as SoulReaderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SoulReader {
    return new Contract(address, _abi, signerOrProvider) as SoulReader;
  }
}
