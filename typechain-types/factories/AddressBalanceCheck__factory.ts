/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AddressBalanceCheck,
  AddressBalanceCheckInterface,
} from "../AddressBalanceCheck";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "factor",
        type: "uint256",
      },
    ],
    name: "shiftedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6106a5610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c8063078d3b791461005b5780637fed018f14610084578063e4652f49146100b4578063eedc966a146100dd575b600080fd5b81801561006757600080fd5b50610082600480360381019061007d91906103e2565b61010d565b005b61009e60048036038101906100999190610431565b6101a0565b6040516100ab9190610567565b60405180910390f35b8180156100c057600080fd5b506100db60048036038101906100d691906103e2565b61023e565b005b6100f760048036038101906100f291906103b9565b6102d3565b6040516101049190610567565b60405180910390f35b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161014892919061053e565b602060405180830381600087803b15801561016257600080fd5b505af1158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a919061046d565b50505050565b6000818373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101dc91906104ec565b60206040518083038186803b1580156101f457600080fd5b505afa158015610208573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022c9190610496565b6102369190610582565b905092915050565b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b815260040161027b93929190610507565b602060405180830381600087803b15801561029557600080fd5b505af11580156102a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cd919061046d565b50505050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161030e91906104ec565b60206040518083038186803b15801561032657600080fd5b505afa15801561033a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035e9190610496565b9050919050565b6000813590506103748161062a565b92915050565b60008151905061038981610641565b92915050565b60008135905061039e81610658565b92915050565b6000815190506103b381610658565b92915050565b6000602082840312156103cb57600080fd5b60006103d984828501610365565b91505092915050565b6000806000606084860312156103f757600080fd5b600061040586828701610365565b935050602061041686828701610365565b92505060406104278682870161038f565b9150509250925092565b6000806040838503121561044457600080fd5b600061045285828601610365565b92505060206104638582860161038f565b9150509250929050565b60006020828403121561047f57600080fd5b600061048d8482850161037a565b91505092915050565b6000602082840312156104a857600080fd5b60006104b6848285016103a4565b91505092915050565b6104c8816105b3565b82525050565b6104d7816105f1565b82525050565b6104e6816105f1565b82525050565b600060208201905061050160008301846104bf565b92915050565b600060608201905061051c60008301866104bf565b61052960208301856104bf565b61053660408301846104ce565b949350505050565b600060408201905061055360008301856104bf565b61056060208301846104ce565b9392505050565b600060208201905061057c60008301846104dd565b92915050565b600061058d826105f1565b9150610598836105f1565b9250826105a8576105a76105fb565b5b828204905092915050565b60006105be826105d1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610633816105b3565b811461063e57600080fd5b50565b61064a816105c5565b811461065557600080fd5b50565b610661816105f1565b811461066c57600080fd5b5056fea264697066735822122010aed226923556dec3dd758971157d2126e000062a2bdca55f3a8158a5bf414b64736f6c63430008040033";

export class AddressBalanceCheck__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AddressBalanceCheck> {
    return super.deploy(overrides || {}) as Promise<AddressBalanceCheck>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AddressBalanceCheck {
    return super.attach(address) as AddressBalanceCheck;
  }
  connect(signer: Signer): AddressBalanceCheck__factory {
    return super.connect(signer) as AddressBalanceCheck__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressBalanceCheckInterface {
    return new utils.Interface(_abi) as AddressBalanceCheckInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressBalanceCheck {
    return new Contract(address, _abi, signerOrProvider) as AddressBalanceCheck;
  }
}
