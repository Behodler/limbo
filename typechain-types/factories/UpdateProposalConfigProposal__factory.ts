/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UpdateProposalConfigProposal,
  UpdateProposalConfigProposalInterface,
} from "../UpdateProposalConfigProposal";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orchestrateExecute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "votingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredFateStake",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "proposalFactory",
        type: "address",
      },
    ],
    name: "parameterize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "params",
    outputs: [
      {
        internalType: "uint256",
        name: "votingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredFateStake",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "proposalFactory",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e0538038062000e058339818101604052810190620000379190620001d6565b818181600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060009080519060200190620000929291906200009d565b5050505050620003ee565b828054620000ab90620002f9565b90600052602060002090601f016020900481019282620000cf57600085556200011b565b82601f10620000ea57805160ff19168380011785556200011b565b828001600101855582156200011b579182015b828111156200011a578251825591602001919060010190620000fd565b5b5090506200012a91906200012e565b5090565b5b80821115620001495760008160009055506001016200012f565b5090565b6000620001646200015e8462000259565b62000230565b9050828152602081018484840111156200017d57600080fd5b6200018a848285620002c3565b509392505050565b600081519050620001a381620003d4565b92915050565b600082601f830112620001bb57600080fd5b8151620001cd8482602086016200014d565b91505092915050565b60008060408385031215620001ea57600080fd5b6000620001fa8582860162000192565b925050602083015167ffffffffffffffff8111156200021857600080fd5b6200022685828601620001a9565b9150509250929050565b60006200023c6200024f565b90506200024a82826200032f565b919050565b6000604051905090565b600067ffffffffffffffff82111562000277576200027662000394565b5b6200028282620003c3565b9050602081019050919050565b60006200029c82620002a3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620002e3578082015181840152602081019050620002c6565b83811115620002f3576000848401525b50505050565b600060028204905060018216806200031257607f821691505b6020821081141562000329576200032862000365565b5b50919050565b6200033a82620003c3565b810181811067ffffffffffffffff821117156200035c576200035b62000394565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620003df816200028f565b8114620003eb57600080fd5b50565b610a0780620003fe6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633bfcc238146100515780633e7f6c641461006d5780637284e41614610077578063cff0ab9614610095575b600080fd5b61006b6004803603810190610066919061055a565b6100b5565b005b610075610229565b005b61007f610378565b60405161008c9190610703565b60405180910390f35b61009d610406565b6040516100ac939291906107a5565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364c5ce866040518163ffffffff1660e01b815260040160a06040518083038186803b15801561011f57600080fd5b505afa158015610133573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015791906105a9565b9450505050503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c390610745565b60405180910390fd5b816002800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826002600101819055508360026000018190555050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b790610765565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032590610725565b60405180910390fd5b61033661043e565b610375576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036c90610785565b60405180910390fd5b50565b6000805461038590610867565b80601f01602080910402602001604051908101604052809291908181526020018280546103b190610867565b80156103fe5780601f106103d3576101008083540402835291602001916103fe565b820191906000526020600020905b8154815290600101906020018083116103e157829003601f168201915b505050505081565b60028060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632b57bb806002600001546002600101546002800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518463ffffffff1660e01b81526004016104cd939291906107a5565b600060405180830381600087803b1580156104e757600080fd5b505af11580156104fb573d6000803e3d6000fd5b505050506001905090565b600081359050610515816109a3565b92915050565b60008151905061052a816109a3565b92915050565b60008135905061053f816109ba565b92915050565b600081519050610554816109ba565b92915050565b60008060006060848603121561056f57600080fd5b600061057d86828701610530565b935050602061058e86828701610530565b925050604061059f86828701610506565b9150509250925092565b600080600080600060a086880312156105c157600080fd5b60006105cf88828901610545565b95505060206105e088828901610545565b94505060406105f18882890161051b565b935050606061060288828901610545565b92505060806106138882890161051b565b9150509295509295909350565b610629816107f8565b82525050565b600061063a826107dc565b61064481856107e7565b9350610654818560208601610834565b61065d816108c8565b840191505092915050565b6000610675601d836107e7565b9150610680826108d9565b602082019050919050565b60006106986019836107e7565b91506106a382610902565b602082019050919050565b60006106bb6015836107e7565b91506106c68261092b565b602082019050919050565b60006106de6026836107e7565b91506106e982610954565b604082019050919050565b6106fd8161082a565b82525050565b6000602082019050818103600083015261071d818461062f565b905092915050565b6000602082019050818103600083015261073e81610668565b9050919050565b6000602082019050818103600083015261075e8161068b565b9050919050565b6000602082019050818103600083015261077e816106ae565b9050919050565b6000602082019050818103600083015261079e816106d1565b9050919050565b60006060820190506107ba60008301866106f4565b6107c760208301856106f4565b6107d46040830184610620565b949350505050565b600081519050919050565b600082825260208201905092915050565b60006108038261080a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610852578082015181840152602081019050610837565b83811115610861576000848401525b50505050565b6000600282049050600182168061087f57607f821691505b6020821081141561089357610892610899565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f50524f504f53414c3a206f6e6c792044414f2063616e20696e766f6b65000000600082015250565b7f4c696d626f44414f3a2070726f706f73616c206c6f636b656400000000000000600082015250565b7f50524f504f53414c3a2044414f206e6f74207365740000000000000000000000600082015250565b7f4c696d626f44414f3a20657865637574696f6e206f662070726f706f73616c2060008201527f6661696c65640000000000000000000000000000000000000000000000000000602082015250565b6109ac816107f8565b81146109b757600080fd5b50565b6109c38161082a565b81146109ce57600080fd5b5056fea2646970667358221220b7fbccd28c1d3505371aec110a0022745666b276c3f48a5cb5a235a7ef7c0cc264736f6c63430008040033";

export class UpdateProposalConfigProposal__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    dao: string,
    _description: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpdateProposalConfigProposal> {
    return super.deploy(
      dao,
      _description,
      overrides || {}
    ) as Promise<UpdateProposalConfigProposal>;
  }
  getDeployTransaction(
    dao: string,
    _description: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(dao, _description, overrides || {});
  }
  attach(address: string): UpdateProposalConfigProposal {
    return super.attach(address) as UpdateProposalConfigProposal;
  }
  connect(signer: Signer): UpdateProposalConfigProposal__factory {
    return super.connect(signer) as UpdateProposalConfigProposal__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpdateProposalConfigProposalInterface {
    return new utils.Interface(_abi) as UpdateProposalConfigProposalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpdateProposalConfigProposal {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UpdateProposalConfigProposal;
  }
}
