/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ToggleWhitelistProposalProposal,
  ToggleWhitelistProposalProposalInterface,
} from "../ToggleWhitelistProposalProposal";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orchestrateExecute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proposalFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "toggleContract",
        type: "address",
      },
    ],
    name: "parameterize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e0738038062000e07833981810160405281019062000037919062000268565b816000805462000047906200038b565b80601f016020809104026020016040519081016040528092919081815260200182805462000075906200038b565b8015620000c65780601f106200009a57610100808354040283529160200191620000c6565b820191906000526020600020905b815481529060010190602001808311620000a857829003601f168201915b505050505081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060009080519060200190620001249291906200012f565b505050505062000480565b8280546200013d906200038b565b90600052602060002090601f016020900481019282620001615760008555620001ad565b82601f106200017c57805160ff1916838001178555620001ad565b82800160010185558215620001ad579182015b82811115620001ac5782518255916020019190600101906200018f565b5b509050620001bc9190620001c0565b5090565b5b80821115620001db576000816000905550600101620001c1565b5090565b6000620001f6620001f084620002eb565b620002c2565b9050828152602081018484840111156200020f57600080fd5b6200021c84828562000355565b509392505050565b600081519050620002358162000466565b92915050565b600082601f8301126200024d57600080fd5b81516200025f848260208601620001df565b91505092915050565b600080604083850312156200027c57600080fd5b60006200028c8582860162000224565b925050602083015167ffffffffffffffff811115620002aa57600080fd5b620002b8858286016200023b565b9150509250929050565b6000620002ce620002e1565b9050620002dc8282620003c1565b919050565b6000604051905090565b600067ffffffffffffffff82111562000309576200030862000426565b5b620003148262000455565b9050602081019050919050565b60006200032e8262000335565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200037557808201518184015260208101905062000358565b8381111562000385576000848401525b50505050565b60006002820490506001821680620003a457607f821691505b60208210811415620003bb57620003ba620003f7565b5b50919050565b620003cc8262000455565b810181811067ffffffffffffffff82111715620003ee57620003ed62000426565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620004718162000321565b81146200047d57600080fd5b50565b61097780620004906000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633e7f6c64146100465780637284e41614610050578063ef99fc0e1461006e575b600080fd5b61004e61008a565b005b6100586101d9565b60405161006591906106aa565b60405180910390f35b61008860048036038101906100839190610508565b610267565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610121576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101189061070c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461018f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610186906106cc565b60405180910390fd5b61019761040b565b6101d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cd9061072c565b60405180910390fd5b50565b600080546101e6906107d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610212906107d7565b801561025f5780601f106102345761010080835404028352916020019161025f565b820191906000526020600020905b81548152906001019060200180831161024257829003601f168201915b505050505081565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364c5ce866040518163ffffffff1660e01b815260040160a06040518083038186803b1580156102d157600080fd5b505afa1580156102e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103099190610544565b9450505050503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561037e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610375906106ec565b60405180910390fd5b82600260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e5f6f7fd600260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401610490919061068f565b600060405180830381600087803b1580156104aa57600080fd5b505af11580156104be573d6000803e3d6000fd5b505050506001905090565b6000813590506104d881610913565b92915050565b6000815190506104ed81610913565b92915050565b6000815190506105028161092a565b92915050565b6000806040838503121561051b57600080fd5b6000610529858286016104c9565b925050602061053a858286016104c9565b9150509250929050565b600080600080600060a0868803121561055c57600080fd5b600061056a888289016104f3565b955050602061057b888289016104f3565b945050604061058c888289016104de565b935050606061059d888289016104f3565b92505060806105ae888289016104de565b9150509295509295909350565b6105c481610768565b82525050565b60006105d58261074c565b6105df8185610757565b93506105ef8185602086016107a4565b6105f881610838565b840191505092915050565b6000610610601d83610757565b915061061b82610849565b602082019050919050565b6000610633601983610757565b915061063e82610872565b602082019050919050565b6000610656601583610757565b91506106618261089b565b602082019050919050565b6000610679602683610757565b9150610684826108c4565b604082019050919050565b60006020820190506106a460008301846105bb565b92915050565b600060208201905081810360008301526106c481846105ca565b905092915050565b600060208201905081810360008301526106e581610603565b9050919050565b6000602082019050818103600083015261070581610626565b9050919050565b6000602082019050818103600083015261072581610649565b9050919050565b600060208201905081810360008301526107458161066c565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006107738261077a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156107c25780820151818401526020810190506107a7565b838111156107d1576000848401525b50505050565b600060028204905060018216806107ef57607f821691505b6020821081141561080357610802610809565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f50524f504f53414c3a206f6e6c792044414f2063616e20696e766f6b65000000600082015250565b7f4c696d626f44414f3a2070726f706f73616c206c6f636b656400000000000000600082015250565b7f50524f504f53414c3a2044414f206e6f74207365740000000000000000000000600082015250565b7f4c696d626f44414f3a20657865637574696f6e206f662070726f706f73616c2060008201527f6661696c65640000000000000000000000000000000000000000000000000000602082015250565b61091c81610768565b811461092757600080fd5b50565b6109338161079a565b811461093e57600080fd5b5056fea2646970667358221220d8c9e0db358cc6014d62a4e48713e94b80120aaa30432391a5606fc86f6c713664736f6c63430008040033";

export class ToggleWhitelistProposalProposal__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    dao: string,
    _description: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ToggleWhitelistProposalProposal> {
    return super.deploy(
      dao,
      _description,
      overrides || {}
    ) as Promise<ToggleWhitelistProposalProposal>;
  }
  getDeployTransaction(
    dao: string,
    _description: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(dao, _description, overrides || {});
  }
  attach(address: string): ToggleWhitelistProposalProposal {
    return super.attach(address) as ToggleWhitelistProposalProposal;
  }
  connect(signer: Signer): ToggleWhitelistProposalProposal__factory {
    return super.connect(signer) as ToggleWhitelistProposalProposal__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ToggleWhitelistProposalProposalInterface {
    return new utils.Interface(
      _abi
    ) as ToggleWhitelistProposalProposalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ToggleWhitelistProposalProposal {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ToggleWhitelistProposalProposal;
  }
}
