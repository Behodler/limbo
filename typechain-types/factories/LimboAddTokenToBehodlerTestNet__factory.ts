/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LimboAddTokenToBehodlerTestNet,
  LimboAddTokenToBehodlerTestNetInterface,
} from "../LimboAddTokenToBehodlerTestNet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "angband",
        type: "address",
      },
      {
        internalType: "address",
        name: "behodler",
        type: "address",
      },
      {
        internalType: "address",
        name: "lachesis",
        type: "address",
      },
      {
        internalType: "address",
        name: "limbo",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "minion",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domain",
        type: "bytes32",
      },
    ],
    name: "PowerInvoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "minion",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "invoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "soul",
        type: "address",
      },
      {
        internalType: "bool",
        name: "burnable",
        type: "bool",
      },
    ],
    name: "parameterize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "params",
    outputs: [
      {
        internalType: "address",
        name: "soul",
        type: "address",
      },
      {
        internalType: "bool",
        name: "burnable",
        type: "bool",
      },
      {
        internalType: "address",
        name: "limbo",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011cc380380620011cc833981810160405281019062000037919062000167565b80600060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836002800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000221565b600081519050620001618162000207565b92915050565b600080600080608085870312156200017e57600080fd5b60006200018e8782880162000150565b9450506020620001a18782880162000150565b9350506040620001b48782880162000150565b9250506060620001c78782880162000150565b91505092959194509250565b6000620001e082620001e7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200021281620001d3565b81146200021e57600080fd5b50565b610f9b80620002316000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806314c6fd2814610046578063c936c23314610062578063cff0ab961461007e575b600080fd5b610060600480360381019061005b9190610a05565b61009e565b005b61007c60048036038101906100779190610a6a565b610194565b005b6100866102aa565b60405161009593929190610bfb565b60405180910390f35b600060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610131576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012890610ce7565b60405180910390fd5b816000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000800160146101000a81548160ff0219169083151502179055505050565b6002800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021d90610cc7565b60405180910390fd5b61022e61030f565b61026d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026490610d27565b60405180910390fd5b7fbf5b23777e352e9708c3b8c426082bfe210a51d7fa57e008add695df522b804c818360405161029e929190610c69565b60405180910390a15050565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60008073ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039b90610d47565b60405180910390fd5b6000600260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166366ce93ca6000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016000800160149054906101000a900460ff166040518463ffffffff1660e01b815260040161044193929190610c32565b600060405180830381600087803b15801561045b57600080fd5b505af115801561046f573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16637a29e0226000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016104d09190610be0565b600060405180830381600087803b1580156104ea57600080fd5b505af11580156104fe573d6000803e3d6000fd5b5050505060008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105619190610be0565b60206040518083038186803b15801561057957600080fd5b505afa15801561058d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b19190610aa6565b9050600081116105f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ed90610d07565b60405180910390fd5b6000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b815260040161069a929190610c9e565b602060405180830381600087803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec9190610a41565b50600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663566887006000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610771929190610c9e565b602060405180830381600087803b15801561078b57600080fd5b505af115801561079f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c39190610aa6565b506000600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108249190610be0565b60206040518083038186803b15801561083c57600080fd5b505afa158015610850573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108749190610aa6565b9050600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016108fb929190610c9e565b602060405180830381600087803b15801561091557600080fd5b505af1158015610929573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094d9190610a41565b5060008060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001935050505090565b6000813590506109ab81610f09565b92915050565b6000813590506109c081610f20565b92915050565b6000815190506109d581610f20565b92915050565b6000813590506109ea81610f37565b92915050565b6000815190506109ff81610f4e565b92915050565b60008060408385031215610a1857600080fd5b6000610a268582860161099c565b9250506020610a37858286016109b1565b9150509250929050565b600060208284031215610a5357600080fd5b6000610a61848285016109c6565b91505092915050565b60008060408385031215610a7d57600080fd5b6000610a8b858286016109db565b9250506020610a9c8582860161099c565b9150509250929050565b600060208284031215610ab857600080fd5b6000610ac6848285016109f0565b91505092915050565b610ad881610d78565b82525050565b610ae781610d8a565b82525050565b610af681610d96565b82525050565b6000610b09601583610d67565b9150610b1482610dca565b602082019050919050565b6000610b2c603283610d67565b9150610b3782610df3565b604082019050919050565b6000610b4f602283610d67565b9150610b5a82610e42565b604082019050919050565b6000610b72601983610d67565b9150610b7d82610e91565b602082019050919050565b6000610b95602883610d67565b9150610ba082610eba565b604082019050919050565b7f646f6d61696e0000000000000000000000000000000000000000000000000000815250565b610bda81610dc0565b82525050565b6000602082019050610bf56000830184610acf565b92915050565b6000606082019050610c106000830186610acf565b610c1d6020830185610ade565b610c2a6040830184610acf565b949350505050565b6000606082019050610c476000830186610acf565b610c546020830185610ade565b610c616040830184610ade565b949350505050565b6000606082019050610c7e6000830185610acf565b610c8b6020830184610aed565b610c9760408301610bab565b9392505050565b6000604082019050610cb36000830185610acf565b610cc06020830184610bd1565b9392505050565b60006020820190508181036000830152610ce081610afc565b9050919050565b60006020820190508181036000830152610d0081610b1f565b9050919050565b60006020820190508181036000830152610d2081610b42565b9050919050565b60006020820190508181036000830152610d4081610b65565b9050919050565b60006020820190508181036000830152610d6081610b88565b9050919050565b600082825260208201905092915050565b6000610d8382610da0565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4d4f52474f54483a20616e6762616e64206f6e6c790000000000000000000000600082015250565b7f4d4f52474f54483a204f6e6c79204c696d626f2063616e206d6967726174652060008201527f746f6b656e732066726f6d204c696d626f2e0000000000000000000000000000602082015250565b7f4d4f52474f54483a2072656d656d62657220746f207365656420636f6e74726160008201527f6374000000000000000000000000000000000000000000000000000000000000602082015250565b7f4d4f52474f54483a20506f77657220696e766f636174696f6e00000000000000600082015250565b7f4d4f52474f54483a20506f776572496e766f6b6572206e6f7420706172616d6560008201527f746572697a65642e000000000000000000000000000000000000000000000000602082015250565b610f1281610d78565b8114610f1d57600080fd5b50565b610f2981610d8a565b8114610f3457600080fd5b50565b610f4081610d96565b8114610f4b57600080fd5b50565b610f5781610dc0565b8114610f6257600080fd5b5056fea2646970667358221220fca7a44079fb1f49df1b2bec1a9ddeaf2a39f9cc9c381ce8c64d4448c624dea864736f6c63430008040033";

export class LimboAddTokenToBehodlerTestNet__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    angband: string,
    behodler: string,
    lachesis: string,
    limbo: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LimboAddTokenToBehodlerTestNet> {
    return super.deploy(
      angband,
      behodler,
      lachesis,
      limbo,
      overrides || {}
    ) as Promise<LimboAddTokenToBehodlerTestNet>;
  }
  getDeployTransaction(
    angband: string,
    behodler: string,
    lachesis: string,
    limbo: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      angband,
      behodler,
      lachesis,
      limbo,
      overrides || {}
    );
  }
  attach(address: string): LimboAddTokenToBehodlerTestNet {
    return super.attach(address) as LimboAddTokenToBehodlerTestNet;
  }
  connect(signer: Signer): LimboAddTokenToBehodlerTestNet__factory {
    return super.connect(signer) as LimboAddTokenToBehodlerTestNet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LimboAddTokenToBehodlerTestNetInterface {
    return new utils.Interface(_abi) as LimboAddTokenToBehodlerTestNetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LimboAddTokenToBehodlerTestNet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LimboAddTokenToBehodlerTestNet;
  }
}
