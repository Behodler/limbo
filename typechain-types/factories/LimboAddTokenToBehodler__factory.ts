/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LimboAddTokenToBehodler,
  LimboAddTokenToBehodlerInterface,
} from "../LimboAddTokenToBehodler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_angband",
        type: "address",
      },
      {
        internalType: "address",
        name: "limbo",
        type: "address",
      },
      {
        internalType: "address",
        name: "behodlerLite",
        type: "address",
      },
      {
        internalType: "address",
        name: "_proxyregistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "angband",
    outputs: [
      {
        internalType: "contract AngbandLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "invoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "soul",
        type: "address",
      },
      {
        internalType: "bool",
        name: "burnable",
        type: "bool",
      },
    ],
    name: "parameterize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "params",
    outputs: [
      {
        internalType: "address",
        name: "soul",
        type: "address",
      },
      {
        internalType: "bool",
        name: "burnable",
        type: "bool",
      },
      {
        internalType: "address",
        name: "limbo",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenProxyRegistry",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200129a3803806200129a833981810160405281019062000037919062000162565b83806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050826001800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200021c565b6000815190506200015c8162000202565b92915050565b600080600080608085870312156200017957600080fd5b600062000189878288016200014b565b94505060206200019c878288016200014b565b9350506040620001af878288016200014b565b9250506060620001c2878288016200014b565b91505092959194509250565b6000620001db82620001e2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200020d81620001ce565b81146200021957600080fd5b50565b61106e806200022c6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806314c6fd2814610051578063cab7f5211461006d578063cff0ab9614610077578063f77b09c214610098575b600080fd5b61006b60048036038101906100669190610b15565b6100b6565b005b6100756101ad565b005b61007f610284565b60405161008f9493929190610d0e565b60405180910390f35b6100a061030f565b6040516100ad9190610d7c565b60405180910390f35b6001800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013f90610db7565b60405180910390fd5b81600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160000160146101000a81548160ff0219169083151502179055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023290610d97565b60405180910390fd5b610243610333565b610282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027990610df7565b60405180910390fd5b565b60018060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff16600160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c090610e17565b60405180910390fd5b6000600160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104299190610cca565b60206040518083038186803b15801561044157600080fd5b505afa158015610455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104799190610bb6565b9050600081116104be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b590610dd7565b60405180910390fd5b600080600160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637f1c59ae600160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016105449190610cca565b604080518083038186803b15801561055b57600080fd5b505afa15801561056f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105939190610b51565b915091506000600160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508180156105fb5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b156106b757829050600160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e9a695030866040518363ffffffff1660e01b8152600401610663929190610d53565b602060405180830381600087803b15801561067d57600080fd5b505af1158015610691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b59190610bb6565b505b8073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610734929190610d53565b602060405180830381600087803b15801561074e57600080fd5b505af1158015610762573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107869190610b8d565b50600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa5caa5082600160000160149054906101000a900460ff166040518363ffffffff1660e01b81526004016107f6929190610ce5565b600060405180830381600087803b15801561081057600080fd5b505af1158015610824573d6000803e3d6000fd5b50505050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635668870082866040518363ffffffff1660e01b8152600401610885929190610d53565b602060405180830381600087803b15801561089f57600080fd5b505af11580156108b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d79190610bb6565b506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109359190610cca565b60206040518083038186803b15801561094d57600080fd5b505afa158015610961573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109859190610bb6565b9050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6001800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610a08929190610d53565b602060405180830381600087803b158015610a2257600080fd5b505af1158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190610b8d565b506000600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019550505050505090565b600081359050610abb81610ff3565b92915050565b600081519050610ad081610ff3565b92915050565b600081359050610ae58161100a565b92915050565b600081519050610afa8161100a565b92915050565b600081519050610b0f81611021565b92915050565b60008060408385031215610b2857600080fd5b6000610b3685828601610aac565b9250506020610b4785828601610ad6565b9150509250929050565b60008060408385031215610b6457600080fd5b6000610b7285828601610ac1565b9250506020610b8385828601610aeb565b9150509250929050565b600060208284031215610b9f57600080fd5b6000610bad84828501610aeb565b91505092915050565b600060208284031215610bc857600080fd5b6000610bd684828501610b00565b91505092915050565b610be881610e48565b82525050565b610bf781610e5a565b82525050565b610c0681610e90565b82525050565b6000610c19601583610e37565b9150610c2482610eb4565b602082019050919050565b6000610c3c603283610e37565b9150610c4782610edd565b604082019050919050565b6000610c5f602283610e37565b9150610c6a82610f2c565b604082019050919050565b6000610c82601983610e37565b9150610c8d82610f7b565b602082019050919050565b6000610ca5602883610e37565b9150610cb082610fa4565b604082019050919050565b610cc481610e86565b82525050565b6000602082019050610cdf6000830184610bdf565b92915050565b6000604082019050610cfa6000830185610bdf565b610d076020830184610bee565b9392505050565b6000608082019050610d236000830187610bdf565b610d306020830186610bee565b610d3d6040830185610bdf565b610d4a6060830184610bdf565b95945050505050565b6000604082019050610d686000830185610bdf565b610d756020830184610cbb565b9392505050565b6000602082019050610d916000830184610bfd565b92915050565b60006020820190508181036000830152610db081610c0c565b9050919050565b60006020820190508181036000830152610dd081610c2f565b9050919050565b60006020820190508181036000830152610df081610c52565b9050919050565b60006020820190508181036000830152610e1081610c75565b9050919050565b60006020820190508181036000830152610e3081610c98565b9050919050565b600082825260208201905092915050565b6000610e5382610e66565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e9b82610ea2565b9050919050565b6000610ead82610e66565b9050919050565b7f4d4f52474f54483a20616e6762616e64206f6e6c790000000000000000000000600082015250565b7f4d4f52474f54483a204f6e6c79204c696d626f2063616e206d6967726174652060008201527f746f6b656e732066726f6d204c696d626f2e0000000000000000000000000000602082015250565b7f4d4f52474f54483a2072656d656d62657220746f207365656420636f6e74726160008201527f6374000000000000000000000000000000000000000000000000000000000000602082015250565b7f4d4f52474f54483a20506f77657220696e766f636174696f6e00000000000000600082015250565b7f4d4f52474f54483a20506f776572496e766f6b6572206e6f7420706172616d6560008201527f746572697a65642e000000000000000000000000000000000000000000000000602082015250565b610ffc81610e48565b811461100757600080fd5b50565b61101381610e5a565b811461101e57600080fd5b50565b61102a81610e86565b811461103557600080fd5b5056fea26469706673582212208aa95b009a9105c165a61b83483d3b64655514e3f66cdb1de3d6d95cefd7c97864736f6c63430008040033";

export class LimboAddTokenToBehodler__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _angband: string,
    limbo: string,
    behodlerLite: string,
    _proxyregistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LimboAddTokenToBehodler> {
    return super.deploy(
      _angband,
      limbo,
      behodlerLite,
      _proxyregistry,
      overrides || {}
    ) as Promise<LimboAddTokenToBehodler>;
  }
  getDeployTransaction(
    _angband: string,
    limbo: string,
    behodlerLite: string,
    _proxyregistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _angband,
      limbo,
      behodlerLite,
      _proxyregistry,
      overrides || {}
    );
  }
  attach(address: string): LimboAddTokenToBehodler {
    return super.attach(address) as LimboAddTokenToBehodler;
  }
  connect(signer: Signer): LimboAddTokenToBehodler__factory {
    return super.connect(signer) as LimboAddTokenToBehodler__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LimboAddTokenToBehodlerInterface {
    return new utils.Interface(_abi) as LimboAddTokenToBehodlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LimboAddTokenToBehodler {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LimboAddTokenToBehodler;
  }
}
