/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SetAssetApprovalProposal,
  SetAssetApprovalProposalInterface,
} from "../SetAssetApprovalProposal";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orchestrateExecute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "parameterize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "params",
    outputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000eaf38038062000eaf833981810160405281019062000037919062000268565b816000805462000047906200038b565b80601f016020809104026020016040519081016040528092919081815260200182805462000075906200038b565b8015620000c65780601f106200009a57610100808354040283529160200191620000c6565b820191906000526020600020905b815481529060010190602001808311620000a857829003601f168201915b505050505081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060009080519060200190620001249291906200012f565b505050505062000480565b8280546200013d906200038b565b90600052602060002090601f016020900481019282620001615760008555620001ad565b82601f106200017c57805160ff1916838001178555620001ad565b82800160010185558215620001ad579182015b82811115620001ac5782518255916020019190600101906200018f565b5b509050620001bc9190620001c0565b5090565b5b80821115620001db576000816000905550600101620001c1565b5090565b6000620001f6620001f084620002eb565b620002c2565b9050828152602081018484840111156200020f57600080fd5b6200021c84828562000355565b509392505050565b600081519050620002358162000466565b92915050565b600082601f8301126200024d57600080fd5b81516200025f848260208601620001df565b91505092915050565b600080604083850312156200027c57600080fd5b60006200028c8582860162000224565b925050602083015167ffffffffffffffff811115620002aa57600080fd5b620002b8858286016200023b565b9150509250929050565b6000620002ce620002e1565b9050620002dc8282620003c1565b919050565b6000604051905090565b600067ffffffffffffffff82111562000309576200030862000426565b5b620003148262000455565b9050602081019050919050565b60006200032e8262000335565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200037557808201518184015260208101905062000358565b8381111562000385576000848401525b50505050565b60006002820490506001821680620003a457607f821691505b60208210811415620003bb57620003ba620003f7565b5b50919050565b620003cc8262000455565b810181811067ffffffffffffffff82111715620003ee57620003ed62000426565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620004718162000321565b81146200047d57600080fd5b50565b610a1f80620004906000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806314c6fd28146100515780633e7f6c641461006d5780637284e41614610077578063cff0ab9614610095575b600080fd5b61006b60048036038101906100669190610570565b6100b4565b005b610075610231565b005b61007f610380565b60405161008c919061072f565b60405180910390f35b61009d61040e565b6040516100ab929190610706565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364c5ce866040518163ffffffff1660e01b815260040160a06040518083038186803b15801561011e57600080fd5b505afa158015610132573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015691906105ac565b9450505050503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c290610771565b60405180910390fd5b82600260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260000160146101000a81548160ff021916908315150217905550505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bf90610791565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032d90610751565b60405180910390fd5b61033e61044d565b61037d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610374906107b1565b60405180910390fd5b50565b6000805461038d90610868565b80601f01602080910402602001604051908101604052809291908181526020018280546103b990610868565b80156104065780601f106103db57610100808354040283529160200191610406565b820191906000526020600020905b8154815290600101906020018083116103e957829003601f168201915b505050505081565b60028060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16905082565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e49c8b2600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260000160149054906101000a900460ff166040518363ffffffff1660e01b81526004016104e3929190610706565b600060405180830381600087803b1580156104fd57600080fd5b505af1158015610511573d6000803e3d6000fd5b505050506001905090565b60008135905061052b816109a4565b92915050565b600081519050610540816109a4565b92915050565b600081359050610555816109bb565b92915050565b60008151905061056a816109d2565b92915050565b6000806040838503121561058357600080fd5b60006105918582860161051c565b92505060206105a285828601610546565b9150509250929050565b600080600080600060a086880312156105c457600080fd5b60006105d28882890161055b565b95505060206105e38882890161055b565b94505060406105f488828901610531565b93505060606106058882890161055b565b925050608061061688828901610531565b9150509295509295909350565b61062c816107ed565b82525050565b61063b816107ff565b82525050565b600061064c826107d1565b61065681856107dc565b9350610666818560208601610835565b61066f816108c9565b840191505092915050565b6000610687601d836107dc565b9150610692826108da565b602082019050919050565b60006106aa6019836107dc565b91506106b582610903565b602082019050919050565b60006106cd6015836107dc565b91506106d88261092c565b602082019050919050565b60006106f06026836107dc565b91506106fb82610955565b604082019050919050565b600060408201905061071b6000830185610623565b6107286020830184610632565b9392505050565b600060208201905081810360008301526107498184610641565b905092915050565b6000602082019050818103600083015261076a8161067a565b9050919050565b6000602082019050818103600083015261078a8161069d565b9050919050565b600060208201905081810360008301526107aa816106c0565b9050919050565b600060208201905081810360008301526107ca816106e3565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006107f88261080b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610853578082015181840152602081019050610838565b83811115610862576000848401525b50505050565b6000600282049050600182168061088057607f821691505b602082108114156108945761089361089a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f50524f504f53414c3a206f6e6c792044414f2063616e20696e766f6b65000000600082015250565b7f4c696d626f44414f3a2070726f706f73616c206c6f636b656400000000000000600082015250565b7f50524f504f53414c3a2044414f206e6f74207365740000000000000000000000600082015250565b7f4c696d626f44414f3a20657865637574696f6e206f662070726f706f73616c2060008201527f6661696c65640000000000000000000000000000000000000000000000000000602082015250565b6109ad816107ed565b81146109b857600080fd5b50565b6109c4816107ff565b81146109cf57600080fd5b50565b6109db8161082b565b81146109e657600080fd5b5056fea26469706673582212207a0cb6a25f8ff8f0f1c2a1eaaf8c268e2f72893eb35214352eec12e685d689ba64736f6c63430008040033";

export class SetAssetApprovalProposal__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    dao: string,
    _description: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SetAssetApprovalProposal> {
    return super.deploy(
      dao,
      _description,
      overrides || {}
    ) as Promise<SetAssetApprovalProposal>;
  }
  getDeployTransaction(
    dao: string,
    _description: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(dao, _description, overrides || {});
  }
  attach(address: string): SetAssetApprovalProposal {
    return super.attach(address) as SetAssetApprovalProposal;
  }
  connect(signer: Signer): SetAssetApprovalProposal__factory {
    return super.connect(signer) as SetAssetApprovalProposal__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SetAssetApprovalProposalInterface {
    return new utils.Interface(_abi) as SetAssetApprovalProposalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SetAssetApprovalProposal {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SetAssetApprovalProposal;
  }
}
