/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockMigrationUniPair,
  MockMigrationUniPairInterface,
} from "../MockMigrationUniPair";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint112",
        name: "_reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "_reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "_blockTimestampLast",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint112",
        name: "r0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "r1",
        type: "uint112",
      },
    ],
    name: "setReserves",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022f1380380620022f1833981810160405281019062000037919062000197565b818181600390805190602001906200005192919062000075565b5080600490805190602001906200006a92919062000075565b50505050506200037a565b82805462000083906200029f565b90600052602060002090601f016020900481019282620000a75760008555620000f3565b82601f10620000c257805160ff1916838001178555620000f3565b82800160010185558215620000f3579182015b82811115620000f2578251825591602001919060010190620000d5565b5b50905062000102919062000106565b5090565b5b808211156200012157600081600090555060010162000107565b5090565b60006200013c620001368462000233565b6200020a565b9050828152602081018484840111156200015557600080fd5b6200016284828562000269565b509392505050565b600082601f8301126200017c57600080fd5b81516200018e84826020860162000125565b91505092915050565b60008060408385031215620001ab57600080fd5b600083015167ffffffffffffffff811115620001c657600080fd5b620001d4858286016200016a565b925050602083015167ffffffffffffffff811115620001f257600080fd5b62000200858286016200016a565b9150509250929050565b60006200021662000229565b9050620002248282620002d5565b919050565b6000604051905090565b600067ffffffffffffffff8211156200025157620002506200033a565b5b6200025c8262000369565b9050602081019050919050565b60005b83811015620002895780820151818401526020810190506200026c565b8381111562000299576000848401525b50505050565b60006002820490506001821680620002b857607f821691505b60208210811415620002cf57620002ce6200030b565b5b50919050565b620002e08262000369565b810181811067ffffffffffffffff821117156200030257620003016200033a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b611f67806200038a6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636a627842116100a257806395d89b411161007157806395d89b4114610309578063a457c2d714610327578063a9059cbb14610357578063c45a015514610387578063dd62ed3e146103a557610116565b80636a6278421461027157806370a08231146102a157806375ea5f2e146102d157806379cc6790146102ed57610116565b806318160ddd116100e957806318160ddd146101a557806323b872dd146101c3578063313ce567146101f3578063395093511461021157806342966c681461024157610116565b8063022c0d9f1461011b57806306fdde03146101375780630902f1ac14610155578063095ea7b314610175575b600080fd5b6101356004803603810190610130919061140f565b6103d5565b005b61013f6103dc565b60405161014c91906116d9565b60405180910390f35b61015d61046e565b60405161016c9392919061185b565b60405180910390f35b61018f600480360381019061018a919061136e565b6104b9565b60405161019c91906116be565b60405180910390f35b6101ad6104d7565b6040516101ba9190611892565b60405180910390f35b6101dd60048036038101906101d8919061131f565b6104e1565b6040516101ea91906116be565b60405180910390f35b6101fb6105e2565b60405161020891906118ad565b60405180910390f35b61022b6004803603810190610226919061136e565b6105eb565b60405161023891906116be565b60405180910390f35b61025b600480360381019061025691906113e6565b610697565b60405161026891906116be565b60405180910390f35b61028b600480360381019061028691906112ba565b6106b3565b6040516102989190611892565b60405180910390f35b6102bb60048036038101906102b691906112ba565b61076d565b6040516102c89190611892565b60405180910390f35b6102eb60048036038101906102e691906113aa565b6107b5565b005b6103076004803603810190610302919061136e565b610823565b005b6103116108a7565b60405161031e91906116d9565b60405180910390f35b610341600480360381019061033c919061136e565b610939565b60405161034e91906116be565b60405180910390f35b610371600480360381019061036c919061136e565b610a2d565b60405161037e91906116be565b60405180910390f35b61038f610a4b565b60405161039c91906116a3565b60405180910390f35b6103bf60048036038101906103ba91906112e3565b610a53565b6040516103cc9190611892565b60405180910390f35b5050505050565b6060600380546103eb90611add565b80601f016020809104026020016040519081016040528092919081815260200182805461041790611add565b80156104645780601f1061043957610100808354040283529160200191610464565b820191906000526020600020905b81548152906001019060200180831161044757829003601f168201915b5050505050905090565b6000806000600560009054906101000a90046dffffffffffffffffffffffffffff166005600e9054906101000a90046dffffffffffffffffffffffffffff1642925092509250909192565b60006104cd6104c6610ada565b8484610ae2565b6001905092915050565b6000600254905090565b60006104ee848484610cad565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610539610ada565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156105b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b09061177b565b60405180910390fd5b6105d6856105c5610ada565b85846105d191906119f7565b610ae2565b60019150509392505050565b60006012905090565b600061068d6105f8610ada565b848460016000610606610ada565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106889190611928565b610ae2565b6001905092915050565b60006106aa6106a4610ada565b83610f21565b60019050919050565b6000806005600e9054906101000a90046dffffffffffffffffffffffffffff16600560009054906101000a90046dffffffffffffffffffffffffffff166106fa91906118e4565b6005600e9054906101000a90046dffffffffffffffffffffffffffff16600560009054906101000a90046dffffffffffffffffffffffffffff1661073e91906119af565b610748919061197e565b6dffffffffffffffffffffffffffff16905061076483826110e9565b80915050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b81600560006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550806005600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff1602179055505050565b600061083683610831610ada565b610a53565b90508181101561087b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108729061179b565b60405180910390fd5b61089883610887610ada565b848461089391906119f7565b610ae2565b6108a28383610f21565b505050565b6060600480546108b690611add565b80601f01602080910402602001604051908101604052809291908181526020018280546108e290611add565b801561092f5780601f106109045761010080835404028352916020019161092f565b820191906000526020600020905b81548152906001019060200180831161091257829003601f168201915b5050505050905090565b60008060016000610948610ada565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc9061181b565b60405180910390fd5b610a22610a10610ada565b858584610a1d91906119f7565b610ae2565b600191505092915050565b6000610a41610a3a610ada565b8484610cad565b6001905092915050565b600030905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b49906117fb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb99061173b565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610ca09190611892565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d14906117db565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d84906116fb565b60405180910390fd5b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0a9061175b565b60405180910390fd5b8181610e1f91906119f7565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610eaf9190611928565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f139190611892565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f88906117bb565b60405180910390fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611017576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100e9061171b565b60405180910390fd5b818161102391906119f7565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600082825461107791906119f7565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110dc9190611892565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611159576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111509061183b565b60405180910390fd5b806002600082825461116b9190611928565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111c09190611928565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112259190611892565b60405180910390a35050565b60008135905061124081611eec565b92915050565b60008083601f84011261125857600080fd5b8235905067ffffffffffffffff81111561127157600080fd5b60208301915083600182028301111561128957600080fd5b9250929050565b60008135905061129f81611f03565b92915050565b6000813590506112b481611f1a565b92915050565b6000602082840312156112cc57600080fd5b60006112da84828501611231565b91505092915050565b600080604083850312156112f657600080fd5b600061130485828601611231565b925050602061131585828601611231565b9150509250929050565b60008060006060848603121561133457600080fd5b600061134286828701611231565b935050602061135386828701611231565b9250506040611364868287016112a5565b9150509250925092565b6000806040838503121561138157600080fd5b600061138f85828601611231565b92505060206113a0858286016112a5565b9150509250929050565b600080604083850312156113bd57600080fd5b60006113cb85828601611290565b92505060206113dc85828601611290565b9150509250929050565b6000602082840312156113f857600080fd5b6000611406848285016112a5565b91505092915050565b60008060008060006080868803121561142757600080fd5b6000611435888289016112a5565b9550506020611446888289016112a5565b945050604061145788828901611231565b935050606086013567ffffffffffffffff81111561147457600080fd5b61148088828901611246565b92509250509295509295909350565b61149881611a2b565b82525050565b6114a781611a3d565b82525050565b60006114b8826118c8565b6114c281856118d3565b93506114d2818560208601611aaa565b6114db81611b9c565b840191505092915050565b60006114f36023836118d3565b91506114fe82611bad565b604082019050919050565b60006115166022836118d3565b915061152182611bfc565b604082019050919050565b60006115396022836118d3565b915061154482611c4b565b604082019050919050565b600061155c6026836118d3565b915061156782611c9a565b604082019050919050565b600061157f6028836118d3565b915061158a82611ce9565b604082019050919050565b60006115a26024836118d3565b91506115ad82611d38565b604082019050919050565b60006115c56021836118d3565b91506115d082611d87565b604082019050919050565b60006115e86025836118d3565b91506115f382611dd6565b604082019050919050565b600061160b6024836118d3565b915061161682611e25565b604082019050919050565b600061162e6025836118d3565b915061163982611e74565b604082019050919050565b6000611651601f836118d3565b915061165c82611ec3565b602082019050919050565b61167081611a49565b82525050565b61167f81611a83565b82525050565b61168e81611a8d565b82525050565b61169d81611a9d565b82525050565b60006020820190506116b8600083018461148f565b92915050565b60006020820190506116d3600083018461149e565b92915050565b600060208201905081810360008301526116f381846114ad565b905092915050565b60006020820190508181036000830152611714816114e6565b9050919050565b6000602082019050818103600083015261173481611509565b9050919050565b600060208201905081810360008301526117548161152c565b9050919050565b600060208201905081810360008301526117748161154f565b9050919050565b6000602082019050818103600083015261179481611572565b9050919050565b600060208201905081810360008301526117b481611595565b9050919050565b600060208201905081810360008301526117d4816115b8565b9050919050565b600060208201905081810360008301526117f4816115db565b9050919050565b60006020820190508181036000830152611814816115fe565b9050919050565b6000602082019050818103600083015261183481611621565b9050919050565b6000602082019050818103600083015261185481611644565b9050919050565b60006060820190506118706000830186611667565b61187d6020830185611667565b61188a6040830184611685565b949350505050565b60006020820190506118a76000830184611676565b92915050565b60006020820190506118c26000830184611694565b92915050565b600081519050919050565b600082825260208201905092915050565b60006118ef82611a49565b91506118fa83611a49565b9250826dffffffffffffffffffffffffffff0382111561191d5761191c611b0f565b5b828201905092915050565b600061193382611a83565b915061193e83611a83565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561197357611972611b0f565b5b828201905092915050565b600061198982611a49565b915061199483611a49565b9250826119a4576119a3611b3e565b5b828204905092915050565b60006119ba82611a49565b91506119c583611a49565b9250816dffffffffffffffffffffffffffff04831182151516156119ec576119eb611b0f565b5b828202905092915050565b6000611a0282611a83565b9150611a0d83611a83565b925082821015611a2057611a1f611b0f565b5b828203905092915050565b6000611a3682611a63565b9050919050565b60008115159050919050565b60006dffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b60005b83811015611ac8578082015181840152602081019050611aad565b83811115611ad7576000848401525b50505050565b60006002820490506001821680611af557607f821691505b60208210811415611b0957611b08611b6d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760008201527f616e636500000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611ef581611a2b565b8114611f0057600080fd5b50565b611f0c81611a49565b8114611f1757600080fd5b50565b611f2381611a83565b8114611f2e57600080fd5b5056fea2646970667358221220e584292e286b96f6e44802c6876be16c1d61a7611e218940b65dc24ac80d800764736f6c63430008040033";

export class MockMigrationUniPair__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockMigrationUniPair> {
    return super.deploy(
      name,
      symbol,
      overrides || {}
    ) as Promise<MockMigrationUniPair>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): MockMigrationUniPair {
    return super.attach(address) as MockMigrationUniPair;
  }
  connect(signer: Signer): MockMigrationUniPair__factory {
    return super.connect(signer) as MockMigrationUniPair__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockMigrationUniPairInterface {
    return new utils.Interface(_abi) as MockMigrationUniPairInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockMigrationUniPair {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockMigrationUniPair;
  }
}
