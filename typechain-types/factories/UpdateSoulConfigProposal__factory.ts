/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UpdateSoulConfigProposal,
  UpdateSoulConfigProposalInterface,
} from "../UpdateSoulConfigProposal";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "address",
        name: "_limbo",
        type: "address",
      },
      {
        internalType: "address",
        name: "morgothTokenApprover",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orchestrateExecute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "crossingThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "soulType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "state",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fps",
        type: "uint256",
      },
    ],
    name: "parameterize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012533803806200125383398181016040528101906200003791906200025a565b838381600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600090805190602001906200009292919062000121565b50505081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200049d565b8280546200012f90620003a8565b90600052602060002090601f0160209004810192826200015357600085556200019f565b82601f106200016e57805160ff19168380011785556200019f565b828001600101855582156200019f579182015b828111156200019e57825182559160200191906001019062000181565b5b509050620001ae9190620001b2565b5090565b5b80821115620001cd576000816000905550600101620001b3565b5090565b6000620001e8620001e28462000308565b620002df565b9050828152602081018484840111156200020157600080fd5b6200020e84828562000372565b509392505050565b600081519050620002278162000483565b92915050565b600082601f8301126200023f57600080fd5b815162000251848260208601620001d1565b91505092915050565b600080600080608085870312156200027157600080fd5b6000620002818782880162000216565b945050602085015167ffffffffffffffff8111156200029f57600080fd5b620002ad878288016200022d565b9350506040620002c08782880162000216565b9250506060620002d38782880162000216565b91505092959194509250565b6000620002eb620002fe565b9050620002f98282620003de565b919050565b6000604051905090565b600067ffffffffffffffff82111562000326576200032562000443565b5b620003318262000472565b9050602081019050919050565b60006200034b8262000352565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200039257808201518184015260208101905062000375565b83811115620003a2576000848401525b50505050565b60006002820490506001821680620003c157607f821691505b60208210811415620003d857620003d762000414565b5b50919050565b620003e98262000472565b810181811067ffffffffffffffff821117156200040b576200040a62000443565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6200048e816200033e565b81146200049a57600080fd5b50565b610da680620004ad6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633e7f6c64146100465780637284e41614610050578063f3d668ad1461006e575b600080fd5b61004e61008a565b005b6100586101d9565b6040516100659190610a09565b60405180910390f35b6100886004803603810190610083919061075e565b610267565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610121576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011890610ac9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461018f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018690610a89565b60405180910390fd5b6101976104e6565b6101d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cd90610ae9565b60405180910390fd5b50565b600080546101e690610ba0565b80601f016020809104026020016040519081016040528092919081815260200182805461021290610ba0565b801561025f5780601f106102345761010080835404028352916020019161025f565b820191906000526020600020905b81548152906001019060200180831161024257829003601f168201915b505050505081565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364c5ce866040518163ffffffff1660e01b815260040160a06040518083038186803b1580156102d157600080fd5b505afa1580156102e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103099190610810565b9450505050503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561037e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037590610aa9565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d8b964e6886040518263ffffffff1660e01b81526004016103d9919061098d565b60206040518083038186803b1580156103f157600080fd5b505afa158015610405573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042991906107e7565b610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f90610a69565b60405180910390fd5b86600260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560026001018190555084600280018190555083600260030181905550826002600401819055508160026005018190555050505050505050565b60006105526040518060400160405280601481526020017f746f6b656e3a2025732c20696e6465783a202573000000000000000000000000815250600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660026004015461062d565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d4a4bdee600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660026001015460028001546002600301546002600401546002600501546040518763ffffffff1660e01b81526004016105f4969594939291906109a8565b600060405180830381600087803b15801561060e57600080fd5b505af1158015610622573d6000803e3d6000fd5b505050506001905090565b6106c783838360405160240161064593929190610a2b565b6040516020818303038152906040527f07c81217000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106cc565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60008135905061070481610d2b565b92915050565b60008151905061071981610d2b565b92915050565b60008151905061072e81610d42565b92915050565b60008135905061074381610d59565b92915050565b60008151905061075881610d59565b92915050565b60008060008060008060c0878903121561077757600080fd5b600061078589828a016106f5565b965050602061079689828a01610734565b95505060406107a789828a01610734565b94505060606107b889828a01610734565b93505060806107c989828a01610734565b92505060a06107da89828a01610734565b9150509295509295509295565b6000602082840312156107f957600080fd5b60006108078482850161071f565b91505092915050565b600080600080600060a0868803121561082857600080fd5b600061083688828901610749565b955050602061084788828901610749565b94505060406108588882890161070a565b935050606061086988828901610749565b925050608061087a8882890161070a565b9150509295509295909350565b61089081610b25565b82525050565b60006108a182610b09565b6108ab8185610b14565b93506108bb818560208601610b6d565b6108c481610c01565b840191505092915050565b60006108dc603383610b14565b91506108e782610c12565b604082019050919050565b60006108ff601d83610b14565b915061090a82610c61565b602082019050919050565b6000610922601983610b14565b915061092d82610c8a565b602082019050919050565b6000610945601583610b14565b915061095082610cb3565b602082019050919050565b6000610968602683610b14565b915061097382610cdc565b604082019050919050565b61098781610b63565b82525050565b60006020820190506109a26000830184610887565b92915050565b600060c0820190506109bd6000830189610887565b6109ca602083018861097e565b6109d7604083018761097e565b6109e4606083018661097e565b6109f1608083018561097e565b6109fe60a083018461097e565b979650505050505050565b60006020820190508181036000830152610a238184610896565b905092915050565b60006060820190508181036000830152610a458186610896565b9050610a546020830185610887565b610a61604083018461097e565b949350505050565b60006020820190508181036000830152610a82816108cf565b9050919050565b60006020820190508181036000830152610aa2816108f2565b9050919050565b60006020820190508181036000830152610ac281610915565b9050919050565b60006020820190508181036000830152610ae281610938565b9050919050565b60006020820190508181036000830152610b028161095b565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000610b3082610b43565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610b8b578082015181840152602081019050610b70565b83811115610b9a576000848401525b50505050565b60006002820490506001821680610bb857607f821691505b60208210811415610bcc57610bcb610bd2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f4d4f52474f54483a20746f6b656e206e6f7420617070726f76656420666f722060008201527f6c697374696e67206f6e204265686f646c657200000000000000000000000000602082015250565b7f50524f504f53414c3a206f6e6c792044414f2063616e20696e766f6b65000000600082015250565b7f4c696d626f44414f3a2070726f706f73616c206c6f636b656400000000000000600082015250565b7f50524f504f53414c3a2044414f206e6f74207365740000000000000000000000600082015250565b7f4c696d626f44414f3a20657865637574696f6e206f662070726f706f73616c2060008201527f6661696c65640000000000000000000000000000000000000000000000000000602082015250565b610d3481610b25565b8114610d3f57600080fd5b50565b610d4b81610b37565b8114610d5657600080fd5b50565b610d6281610b63565b8114610d6d57600080fd5b5056fea2646970667358221220a23cad97548ef8100a0d6d23b142007a74ad47bf2aca5306dcfbd7a7dd0e4b4864736f6c63430008040033";

export class UpdateSoulConfigProposal__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    dao: string,
    _description: string,
    _limbo: string,
    morgothTokenApprover: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpdateSoulConfigProposal> {
    return super.deploy(
      dao,
      _description,
      _limbo,
      morgothTokenApprover,
      overrides || {}
    ) as Promise<UpdateSoulConfigProposal>;
  }
  getDeployTransaction(
    dao: string,
    _description: string,
    _limbo: string,
    morgothTokenApprover: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      dao,
      _description,
      _limbo,
      morgothTokenApprover,
      overrides || {}
    );
  }
  attach(address: string): UpdateSoulConfigProposal {
    return super.attach(address) as UpdateSoulConfigProposal;
  }
  connect(signer: Signer): UpdateSoulConfigProposal__factory {
    return super.connect(signer) as UpdateSoulConfigProposal__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpdateSoulConfigProposalInterface {
    return new utils.Interface(_abi) as UpdateSoulConfigProposalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpdateSoulConfigProposal {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UpdateSoulConfigProposal;
  }
}
