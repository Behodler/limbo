/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ScarcityLite, ScarcityLiteInterface } from "../ScarcityLite";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "uint256",
        name: "transferFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "burnFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeDestination",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transferFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "burnFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeDestination",
        type: "address",
      },
    ],
    name: "configureScarcity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getConfiguration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061157e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c806342966c681161008c57806379502c551161006657806379502c551461022957806395d89b4114610249578063a9059cbb14610267578063dd62ed3e14610297576100ce565b806342966c68146101a95780636bd50cef146101d957806370a08231146101f9576100ce565b80627ed4fe146100d357806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d57806323b872dd1461015b578063313ce5671461018b575b600080fd5b6100ed60048036038101906100e89190610ec6565b6102c7565b005b6100f7610347565b6040516101049190611031565b60405180910390f35b61012760048036038101906101229190610e61565b610384565b6040516101349190611016565b60405180910390f35b61014561039b565b604051610152919061111f565b60405180910390f35b61017560048036038101906101709190610e12565b6103a5565b6040516101829190611016565b60405180910390f35b61019361044f565b6040516101a09190611171565b60405180910390f35b6101c360048036038101906101be9190610e9d565b610458565b6040516101d09190611016565b60405180910390f35b6101e161046d565b6040516101f09392919061113a565b60405180910390f35b610213600480360381019061020e9190610dad565b6104af565b604051610220919061111f565b60405180910390f35b6102316104f7565b6040516102409392919061113a565b60405180910390f35b61025161052f565b60405161025e9190611031565b60405180910390f35b610281600480360381019061027c9190610e61565b61056c565b60405161028e9190611016565b60405180910390f35b6102b160048036038101906102ac9190610dd6565b610583565b6040516102be919061111f565b60405180910390f35b6103e86003600101546003600001546102e091906111a8565b106102ea57600080fd5b826003600001819055508160036001018190555080600360020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60606040518060400160405280600881526020017f5363617263697479000000000000000000000000000000000000000000000000815250905090565b600061039133848461060a565b6001905092915050565b6000600254905090565b60006103b28484846107d5565b610444843384600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461043f9190611289565b61060a565b600190509392505050565b60006012905090565b60006104643383610bdd565b60019050919050565b6000806000600360000154600360010154600360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925092509250909192565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60038060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60606040518060400160405280600381526020017f5343580000000000000000000000000000000000000000000000000000000000815250905090565b60006105793384846107d5565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561067a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610671906110ff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e19061109f565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107c8919061111f565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c906110bf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ac906110df565b60405180910390fd5b60006103e8826003600001546108cb919061122f565b6108d591906111fe565b90506109006040518060600160405280602a815260200161151f602a91396003600001548484610cb8565b60006103e883600360010154610916919061122f565b61092091906111fe565b9050806002546109309190611289565b6002819055507fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb81604051610965919061111f565b60405180910390a181600080600360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109dc91906111a8565b600080600360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a8d9190611289565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508082610adb91906111a8565b83610ae69190611289565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2f91906111a8565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610bce919061111f565b60405180910390a35050505050565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c279190611289565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600254610c779190611289565b6002819055507fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb81604051610cac919061111f565b60405180910390a15050565b610d5484848484604051602401610cd29493929190611053565b6040516020818303038152906040527f08ee5666000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d5a565b50505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600081359050610d92816114f0565b92915050565b600081359050610da781611507565b92915050565b600060208284031215610dbf57600080fd5b6000610dcd84828501610d83565b91505092915050565b60008060408385031215610de957600080fd5b6000610df785828601610d83565b9250506020610e0885828601610d83565b9150509250929050565b600080600060608486031215610e2757600080fd5b6000610e3586828701610d83565b9350506020610e4686828701610d83565b9250506040610e5786828701610d98565b9150509250925092565b60008060408385031215610e7457600080fd5b6000610e8285828601610d83565b9250506020610e9385828601610d98565b9150509250929050565b600060208284031215610eaf57600080fd5b6000610ebd84828501610d98565b91505092915050565b600080600060608486031215610edb57600080fd5b6000610ee986828701610d98565b9350506020610efa86828701610d98565b9250506040610f0b86828701610d83565b9150509250925092565b610f1e816112bd565b82525050565b610f2d816112cf565b82525050565b6000610f3e8261118c565b610f488185611197565b9350610f58818560208601611312565b610f61816113a3565b840191505092915050565b6000610f79602283611197565b9150610f84826113b4565b604082019050919050565b6000610f9c602883611197565b9150610fa782611403565b604082019050919050565b6000610fbf602683611197565b9150610fca82611452565b604082019050919050565b6000610fe2602483611197565b9150610fed826114a1565b604082019050919050565b611001816112fb565b82525050565b61101081611305565b82525050565b600060208201905061102b6000830184610f24565b92915050565b6000602082019050818103600083015261104b8184610f33565b905092915050565b6000608082019050818103600083015261106d8187610f33565b905061107c6020830186610ff8565b6110896040830185610ff8565b6110966060830184610ff8565b95945050505050565b600060208201905081810360008301526110b881610f6c565b9050919050565b600060208201905081810360008301526110d881610f8f565b9050919050565b600060208201905081810360008301526110f881610fb2565b9050919050565b6000602082019050818103600083015261111881610fd5565b9050919050565b60006020820190506111346000830184610ff8565b92915050565b600060608201905061114f6000830186610ff8565b61115c6020830185610ff8565b6111696040830184610f15565b949350505050565b60006020820190506111866000830184611007565b92915050565b600081519050919050565b600082825260208201905092915050565b60006111b3826112fb565b91506111be836112fb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111f3576111f2611345565b5b828201905092915050565b6000611209826112fb565b9150611214836112fb565b92508261122457611223611374565b5b828204905092915050565b600061123a826112fb565b9150611245836112fb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561127e5761127d611345565b5b828202905092915050565b6000611294826112fb565b915061129f836112fb565b9250828210156112b2576112b1611345565b5b828203905092915050565b60006112c8826112db565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611330578082015181840152602081019050611315565b8381111561133f576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f53636172636974793a207472616e736665722066726f6d20746865207a65726f60008201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b7f53636172636974793a207472616e7366657220746f20746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6114f9816112bd565b811461150457600080fd5b50565b611510816112fb565b811461151b57600080fd5b5056fe7472616e736665724665652025732c20616d6f756e742025732c20666565436f6d706f6e656e74202573a26469706673582212209d47e777b081922d61907600a542aa26ba0b3e1fecfbd099b2b78f75553c7fa264736f6c63430008040033";

export class ScarcityLite__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ScarcityLite> {
    return super.deploy(overrides || {}) as Promise<ScarcityLite>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ScarcityLite {
    return super.attach(address) as ScarcityLite;
  }
  connect(signer: Signer): ScarcityLite__factory {
    return super.connect(signer) as ScarcityLite__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScarcityLiteInterface {
    return new utils.Interface(_abi) as ScarcityLiteInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ScarcityLite {
    return new Contract(address, _abi, signerOrProvider) as ScarcityLite;
  }
}
