/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Angband, AngbandInterface } from "../Angband";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "invoker",
        type: "address",
      },
    ],
    name: "executePower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101d3806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ede0b3b514610030575b600080fd5b61004a600480360381019061004591906100cf565b61004c565b005b8073ffffffffffffffffffffffffffffffffffffffff1663c936c233336040518263ffffffff1660e01b8152600401610085919061012d565b600060405180830381600087803b15801561009f57600080fd5b505af11580156100b3573d6000803e3d6000fd5b5050505050565b6000813590506100c981610186565b92915050565b6000602082840312156100e157600080fd5b60006100ef848285016100ba565b91505092915050565b61010181610154565b82525050565b7f7465737400000000000000000000000000000000000000000000000000000000815250565b600060408201905061014160008301610107565b61014e60208301846100f8565b92915050565b600061015f82610166565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61018f81610154565b811461019a57600080fd5b5056fea2646970667358221220aeb8ab666f8f0c92ca48c1e7bf0aef1715027880352a5eb7d402fa3f8a6863b364736f6c63430008040033";

export class Angband__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Angband> {
    return super.deploy(overrides || {}) as Promise<Angband>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Angband {
    return super.attach(address) as Angband;
  }
  connect(signer: Signer): Angband__factory {
    return super.connect(signer) as Angband__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AngbandInterface {
    return new utils.Interface(_abi) as AngbandInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Angband {
    return new Contract(address, _abi, signerOrProvider) as Angband;
  }
}
