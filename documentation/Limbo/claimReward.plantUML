@startuml
!define yoghurt #eeb0ff
start
:Limbo.claimReward(address token, uint256 index);
partition yoghurt "transaction"{
if(limbo enabled) then (yes)
    partition #MistyRose "update soul"{
        if(soul is initialized) then (yes)
            if(total staked balance of soul>0) then(yes)
                :mint flan => duration*flanPerSecond;
            endif
            :update reward update timestamp for soul;
        else (no)
            #lightpink:revert;
            stop
        endif
    }
    if(exitPenalty > 0) then (yes)
        #lightpink:revert;
        stop
    else (penalty == 0)
        if(pending reward >0) then (yes)
            :transfer flan to msg.sender;
            :incremement reward debt by pending;
            note right
                Reward debt is a concept borrowed from Sushi's Masterchef.
                It's a tally of how much you've been rewarded so far.
            end note
        endif
    endif
else (no)
    #lightpink:revert;
    stop
endif
}
stop
@enduml